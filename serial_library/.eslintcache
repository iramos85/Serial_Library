[{"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js":"1","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js":"2","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js":"3","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js":"4","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js":"5","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js":"6","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterDialog/index.js":"7","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginDialog/index.js":"8"},{"size":459,"mtime":1607019616305,"results":"9","hashOfConfig":"10"},{"size":3090,"mtime":1607459552948,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607009845041,"results":"12","hashOfConfig":"10"},{"size":430,"mtime":1607448082682,"results":"13","hashOfConfig":"10"},{"size":1001,"mtime":1607373205829,"results":"14","hashOfConfig":"10"},{"size":2320,"mtime":1607451626501,"results":"15","hashOfConfig":"10"},{"size":3709,"mtime":1607460628877,"results":"16","hashOfConfig":"10"},{"size":3063,"mtime":1607459014697,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3xu66g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js",[],["37","38"],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js",["39"],"import React, { Component } from 'react'\nimport KillerProfileList from '../KillerProfileList'\n\nexport default class SerialProfileList extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      profiles: [],\n    }\n  }\n\n  componentDidMount() {\n    this.getKillers()\n  }\n\n  getKillers = async () => {\n    try {\n\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/killers/\"\n      console.log(\"about to fetch data from:\")\n      console.log(url)\n      const killersResponse = await fetch(url, {\n        credentials: 'include'\n      })\n      console.log(killersResponse)\n      const killersJson = await killersResponse.json()\n      console.log(killersJson)\n\n      this.setState({\n        killers: killersJson.data \n      })\n\n\n    } catch(err) {\n      console.log(\"Error getting Killer Profiles data.\", err)\n    }\n  }\n  render(){\n    return (\n      <React.Fragment>\n        <h2>Infernal List</h2>\n        {/* <KillerProfileList /> */}\n      </React.Fragment>\n    )\n  }\n}\n","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js",["40","41"],"import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\n\n\nexport default function KillerProfileList(props) {\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      maxWidth: 400\n    },\n    expand: {\n      marginLeft: 'auto'\n    }\n  }))\n\n  const ExpandIcon = ({ expanded }) =>\n    expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>\n\n  const ExpandableCards = () => {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState (false)\n  \n  const profiles = props.profiles.map(profile => {\n\n    const toggleExpanded = () => {\n      setExpanded(!expanded)\n    }\n      return (\n        <React.Fragment>\n        <Card className={classes.card}>\n          <CardHeader\n            title={profile.name}\n            subheader={profile.active}\n          />\n          <CardContent>\n            <Typography variant='caption'>Active: {profile.active}</Typography>\n          </CardContent>\n          <CardActions disableActionspacing>\n          <IconButton\n            className={classes.expand}\n            onClick={toggleExpanded}\n          >\n            <ExpandIcon expanded={expanded} />\n          </IconButton> \n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography>\n              {profile.summary}\n              </Typography>\n            </CardContent>\n          </Collapse>\n          {this.state.action === \"Added\"\n          ?\n          <LibraryAddIcon/>\n          :\n          <LibraryAddCheckIcon/>\n          }\n        </Card>\n        </React.Fragment>\n      )\n    })\n\n    return(\n      <Card.Group>\n        {profiles}\n      </Card.Group>\n    )\n  }\n}\n","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterDialog/index.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginDialog/index.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":10,"column":8,"nodeType":"48","messageId":"49","endLine":10,"endColumn":17},{"ruleId":"46","severity":1,"message":"51","line":32,"column":9,"nodeType":"48","messageId":"49","endLine":32,"endColumn":24},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'KillerProfileList' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'ExpandableCards' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]