[{"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js":"1","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js":"2","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js":"3","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js":"4","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterModal/index.js":"5","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js":"6","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js":"7","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginModal/index.js":"8"},{"size":459,"mtime":1607019616305,"results":"9","hashOfConfig":"10"},{"size":2983,"mtime":1607372963080,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607009845041,"results":"12","hashOfConfig":"10"},{"size":563,"mtime":1607098780047,"results":"13","hashOfConfig":"10"},{"size":3857,"mtime":1607358815423,"results":"14","hashOfConfig":"10"},{"size":1001,"mtime":1607373205829,"results":"15","hashOfConfig":"10"},{"size":2243,"mtime":1607368579119,"results":"16","hashOfConfig":"10"},{"size":3884,"mtime":1607373893848,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3xu66g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js",[],["40","41"],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterModal/index.js",["42"],"import React, { Component, Fragment, } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport '../index.css'\n\n\nexport default class CollectingFormInput extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      dialogOpen:false, \n      setDialogOpen: false,\n      snackbarOpen:false,\n      setSnackbarOpen: false,\n      snackbarMessage:'',\n      setSnackbarMessage: '',\n      name:'',\n      setName: '',\n      username:'',\n      setUsername: '',\n      email:'', \n      setEmail:'', \n      password:'',\n      action: 'Login'\n    }\n  } \n  onDialogOpen = () => {\n    this.setState.setDialogOpen=true;\n  }\n\n  onDialogClose = () => {\n  this.setState.setDialogOpen=false\n  }\n\n  onSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway'){\n      return\n    }\n    this.setState.setSnackbarOpen=false\n    this.setState.setSnackbarMessage=''\n  }\n\n  onCreate = () => {\n    this.setState.setSnackbarOpen=true\n    this.setState.setSnackbarMessage= '${username} + created'\n    this.setState.onDialogClose()\n  }\n\n  switchForm = () => {\n    if(this.state.action === \"Login\") {\n      this.setState({ action: \"Register\" })\n    } else {\n      this.setState({ action: \"Login\" })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(`You are trying to ${this.state.action.toLowerCase()} with the following credentials`)\n    console.log(this.state);\n\n    if(this.state.action === \"Register\") {\n        this.props.register(this.state)\n      } else {\n        this.props.login(this.state)\n      }\n  }\n  render() {\n     return (\n\n      <Fragment>\n        <Button color='primary' onClick={this.onDialogOpen}>\n          New User\n        </Button>\n        <Dialog open={this.dialogOpen} onClose={this.onDialogClose}>\n          <DialogTitle>New User</DialogTitle>\n          <DialogContent>\n          <TextField\n            margin='normal'\n            label='Name'\n            InputProps={{ name: 'name'}}\n            onChange ={e => this.setName(e.target.value)}\n            value={this.name}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Username'\n            InputProps={{ name: 'username'}}\n            onChange ={e => this.setUsername(e.target.value)}\n            value={this.username}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Email Address'\n            type='email'\n            InputProps={{ name: 'email'}}\n            onChange ={e => this.setEmail(e.target.value)}\n            value={this.email}\n            fullWidth\n            />\n             <TextField\n            margin='normal'\n            type='password'\n            label='Password'\n            onChange ={this.onChange}\n            value={this.password}\n            fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.onDialogClose} color='primary'>\n              Cancel\n            </Button>\n            <Button\n            variant='contained'\n            onClick={this.onCreate}\n            color='primary'\n            >\n              Create\n            </Button>\n          </DialogActions>\n          <Snackbar\n            open={this.snackbarOpen}\n            message={this.snackbarMessage}\n            onClose={this.onSnackbarClose}\n            autoHideDuration={4000}\n            />\n        </Dialog>\n      </Fragment>\n    )\n  }\n}","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js",["43"],"import React, { Component } from 'react'\nimport KillerProfileList from '../KillerProfileList'\n\nexport default class SerialProfileList extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      profiles: [],\n    }\n  }\n\n  componentDidMount() {\n    this.getKillers()\n  }\n\n  getKillers = async () => {\n    try {\n\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/killers/\"\n      console.log(\"about to fetch data from:\")\n      console.log(url)\n      const killersResponse = await fetch(url, {\n        credentials: 'include'\n      })\n      console.log(killersResponse)\n      const killersJson = await killersResponse.json()\n      console.log(killersJson)\n\n      this.setState({\n        killers: killersJson.data \n      })\n\n\n    } catch(err) {\n      console.log(\"Error getting Killer Profiles data.\", err)\n    }\n  }\n  render(){\n    return (\n      <React.Fragment>\n        <h2>Infernal List</h2>\n        {/* <KillerProfileList /> */}\n      </React.Fragment>\n    )\n  }\n}\n","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js",["44","45","46"],"import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport LibraryAddCheckIcon from '@material-ui/icons/LibraryAddCheck';\n\n\nexport default function KillerProfileList(props) {\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      maxWidth: 400\n    },\n    expand: {\n      marginLeft: 'auto'\n    }\n  }))\n\n  const ExpandIcon = ({ expanded }) =>\n    expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>\n\n  const ExpandableCards = () => {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState (false)\n  \n  const profiles = props.profiles.map(profile => {\n\n    const toggleExpanded = () => {\n      setExpanded(!expanded)\n    }\n      return (\n        <React.Fragment>\n        <Card className={classes.card}>\n          <CardHeader\n            title={profile.name}\n            subheader={profile.active}\n          />\n          <CardContent>\n            <Typography variant='caption'>Active: {profile.active}</Typography>\n          </CardContent>\n          <CardActions disableActionspacing>\n          <IconButton\n            className={classes.expand}\n            onClick={toggleExpanded}\n          >\n            <ExpandIcon expanded={expanded} />\n          </IconButton> \n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography>\n              {profile.summary}\n              </Typography>\n            </CardContent>\n          </Collapse>\n          {this.state.action === \"Added\"\n          ?\n          <LibraryAddIcon/>\n          :\n          <LibraryAddCheckIcon/>\n          }\n        </Card>\n        </React.Fragment>\n      )\n    })\n  }\n}\n",["47","48"],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginModal/index.js",["49"],"import React, { Component, Fragment, } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport '../index.css'\n\n\nexport default class CollectingFormInput extends Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      dialogOpen:false, \n      setDialogOpen: false,\n      snackbarOpen:false,\n      setSnackbarOpen: false,\n      snackbarMessage:'',\n      setSnackbarMessage: '',\n      name:'',\n      setName: '',\n      username:'',\n      setUsername: '',\n      email:'', \n      setEmail:'', \n      password:'',\n      action: 'Login'\n    }\n  } \n  onDialogOpen = () => {\n    this.setState.setDialogOpen=true;\n    console.log(this.onDialogOpen)\n  }\n\n  onDialogClose = () => {\n  this.setState.setDialogOpen=false\n  }\n\n  onSnackbarClose = (e, reason) => {\n    if (reason === 'clickaway'){\n      return\n    }\n    this.setState.setSnackbarOpen=false\n    this.setState.setSnackbarMessage=''\n  }\n\n  onCreate = () => {\n    this.setState.setSnackbarOpen=true\n    this.setState.setSnackbarMessage= '${username} + created'\n    this.setState.onDialogClose()\n  }\n\n  switchForm = () => {\n    if(this.state.action === \"Login\") {\n      this.state({ action: \"Register\" })\n    } else {\n      this.state({ action: \"Login\" })\n    }\n  }\n\n  handleChange = (event) => {\n    this.state({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(`You are trying to ${this.state.action.toLowerCase()} with the following credentials`)\n    console.log(this.state);\n\n    if(this.state.action === \"Register\") {\n        this.props.register(this.state)\n      } else {\n        this.props.login(this.state)\n      }\n  }\n  render() {\n     return (\n\n      <Fragment>\n        <Button color='primary' onClick={this.onDialogOpen}>\n\n          New User\n        </Button>\n        <Dialog open={this.dialogOpen} onClose={this.onDialogClose}>\n          <DialogTitle>New User</DialogTitle>\n          <DialogContent>\n          <TextField\n            margin='normal'\n            label='Name'\n            InputProps={{ name: 'name'}}\n            onChange ={e => this.setName(e.target.value)}\n            value={this.name}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Username'\n            InputProps={{ name: 'username'}}\n            onChange ={e => this.setUsername(e.target.value)}\n            value={this.username}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Email Address'\n            type='email'\n            InputProps={{ name: 'email'}}\n            onChange ={e => this.setEmail(e.target.value)}\n            value={this.email}\n            fullWidth\n            />\n             <TextField\n            margin='normal'\n            type='password'\n            label='Password'\n            onChange ={this.onChange}\n            value={this.password}\n            fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.onDialogClose} color='primary'>\n              Cancel\n            </Button>\n            <Button\n            variant='contained'\n            onClick={this.onCreate}\n            color='primary'\n            >\n              Create\n            </Button>\n          </DialogActions>\n          <Snackbar\n            open={this.snackbarOpen}\n            message={this.snackbarMessage}\n            onClose={this.onSnackbarClose}\n            autoHideDuration={4000}\n            />\n        </Dialog>\n      </Fragment>\n    )\n  }\n}",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":52,"column":39,"nodeType":"56","messageId":"57","endLine":52,"endColumn":62},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":17},{"ruleId":"58","severity":1,"message":"63","line":32,"column":9,"nodeType":"60","messageId":"61","endLine":32,"endColumn":24},{"ruleId":"58","severity":1,"message":"64","line":36,"column":9,"nodeType":"60","messageId":"61","endLine":36,"endColumn":17},{"ruleId":"50","replacedBy":"65"},{"ruleId":"52","replacedBy":"66"},{"ruleId":"54","severity":1,"message":"55","line":53,"column":39,"nodeType":"56","messageId":"57","endLine":53,"endColumn":62},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-unused-vars","'KillerProfileList' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'ExpandableCards' is assigned a value but never used.","'profiles' is assigned a value but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]