[{"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js":"1","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js":"2","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js":"3","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js":"4","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterModal/index.js":"5","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js":"6","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js":"7","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginModal/index.js":"8"},{"size":459,"mtime":1607019616305,"results":"9","hashOfConfig":"10"},{"size":2979,"mtime":1607099149853,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607009845041,"results":"12","hashOfConfig":"10"},{"size":563,"mtime":1607098780047,"results":"13","hashOfConfig":"10"},{"size":5645,"mtime":1607093817063,"results":"14","hashOfConfig":"10"},{"size":946,"mtime":1607117856622,"results":"15","hashOfConfig":"10"},{"size":1987,"mtime":1607117791140,"results":"16","hashOfConfig":"10"},{"size":5376,"mtime":1607098804688,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3xu66g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/index.js",[],["38","39"],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/App.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/reportWebVitals.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/Header/index.js",[],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/RegisterModal/index.js",["40","41"],"\nimport React, { Fragment, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport '../index.css'\n\nexport default function CollectingFormInput() {\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n\n  // constructor() {\n  //   super()\n\n  //   this.state = {\n  //     email: '',\n  //     password: '',\n  //     username: '',\n  //     action: 'Login' // this will track whether we are logging in or registering\n  //   }\n  // }\n\n// switchForm = () => {\n//   if(this.state.action === \"Login\") {\n//     this.setState({ action: \"Register\" })\n//   } else {\n//     this.setState({ action: \"Login\" })\n//   }\n// }\n\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n\n// handleSubmit = (event) => {\n//    event.preventDefault()\n//    console.log(`You are trying to ${this.state.action.toLowerCase()} with the following credentials`)\n//    console.log(this.state);\n//    // Extra challenge: Validate the form!\n//    // Such as...\n//    // Highlight blank fields fields with errors in red\n//    // show the errors under or next to the field\n//    // make sure password is certain length, strength,\n//    // make sure PW includes certain characters (use RegExp)\n//    if(this.state.action === \"Register\") {\n//       this.props.register(this.state)\n//     } else {\n//       this.props.login(this.state)\n//     }\n//  }\n\nconst onDialogOpen = () => {\n  setDialogOpen(true);\n}\n\nconst onDialogClose = () => {\n  setDialogOpen(false)\n}\n\nconst onSnackbarClose = (e, reason) => {\n  if (reason === 'clickaway'){\n    return\n  }\n  setSnackbarOpen (false)\n  setSnackbarMessage('')\n}\n\nconst onCreate = () => {\n  setSnackbarOpen(true)\n  setSnackbarMessage('${username} created')\n  onDialogClose()\n}\n\n\n\n  // render() {\n    return (\n      <React.Fragment>\n        <Button color='primary' onClick={onDialogOpen}>\n          New User\n        </Button>\n        <Dialog open={dialogOpen} onClose={onDialogClose}>\n          <DialogTitle>New User</DialogTitle>\n          <DialogContent>\n          <TextField\n            margin='normal'\n            label='Name'\n            InputProps={{ name: 'name'}}\n            onChange ={e => setName(e.target.value)}\n            value={name}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Username'\n            InputProps={{ name: 'username'}}\n            onChange ={e => setUsername(e.target.value)}\n            value={username}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            label='Email Address'\n            type='email'\n            InputProps={{ name: 'email'}}\n            onChange ={e => setEmail(e.target.value)}\n            value={email}\n            fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onDialogClose} color='primary'>\n              Cancel\n            </Button>\n            <Button\n            variant='contained'\n            onClick={onCreate}\n            color='primary'\n            >\n              Create\n            </Button>\n          </DialogActions>\n          <Snackbar\n            open={snackbarOpen}\n            message={snackbarMessage}\n            onClose={onSnackbarClose}\n            autoHideDuration={4000}\n            />\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n// }\n\n// render() {\n//   return (\n//     <React.Fragment>\n//       <h2>{this.state.action} here</h2>\n//       <Form onSubmit={this.handleSubmit}>\n//       {\n//        // only show username field if they are registering\n//        // because our login process just uses email\n//        this.state.action === \"Register\"\n//        &&\n//        <React.Fragment>\n//          <Label>Username:</Label>\n//          <Form.Input\n//            type=\"text\"\n//            name=\"username\"\n//            placeholder=\"Enter a username\"\n//            value={this.state.username}\n//            onChange={this.handleChange}\n//          />\n//        </React.Fragment>\n//       }\n//         <Label>Email:</Label>\n//         <Form.Input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Enter a email\"\n//           value={this.state.email}\n//           onChange={this.handleChange}\n//         />\n//         <Label>Password:</Label>\n//         <Form.Input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Enter a password\"\n//           value={this.state.password}\n//           onChange={this.handleChange}\n//         />\n//         <Button type=\"Submit\">\n//           { this.state.action === \"Login\" ? \"Log in\" : \"Sign up\"}\n//         </Button>\n//       </Form>\n//       {\n//         this.state.action === \"Login\"\n//         ?\n//         <p>\n//           Need an account? Sign up <span className=\"fake-link\" onClick={this.switchForm}>here</span>.\n//         </p>\n//         :\n//         <p>\n//           Already have an account? Log in <span className=\"fake-link\" onClick={this.switchForm}>here</span>.\n//         </p>\n\n//       }\n//     </React.Fragment>\n//   )\n// }","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerContainer/index.js",["42"],"/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/KillerProfileList/index.js",["43","44","45"],"import React, { useState } from 'react'\n\nimport { makeStyles } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n\nexport default function KillerProfileList(props) {\n\n  const useStyles = makeStyles(theme => ({\n    card: {\n      maxWidth: 400\n    },\n    expand: {\n      marginLeft: 'auto'\n    }\n  }))\n\n  const ExpandIcon = ({ expanded }) =>\n    expanded ? <ExpandLessIcon/> : <ExpandMoreIcon/>\n\n  const ExpandableCards = () => {\n  const classes = useStyles()\n    const [expanded, setExpanded] = useState (false)\n  \n  const profiles = props.profiles.map(profile => {\n\n    const toggleExpanded = () => {\n      setExpanded(!expanded)\n    }\n      return (\n        <React.Fragment>\n        <Card className={classes.card}>\n          <CardHeader\n            title={profile.name}\n            subheader={profile.active}\n          />\n          <CardContent>\n            <Typography variant='caption'>Active: 1985-2020 in United States</Typography>\n          </CardContent>\n          <CardActions disableActionspacing>\n          <IconButton\n            className={classes.expand}\n            onClick={toggleExpanded}\n          >\n            <ExpandIcon expanded={expanded} />\n          </IconButton> \n          </CardActions>\n          <Collapse in={expanded}>\n            <CardContent>\n              <Typography>\n              {profile.summary}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Card>\n        </React.Fragment>\n      )\n    })\n  }\n}\n","/Users/ianramos85/GA/Capstone/Serial_Library/serial_library/src/LoginModal/index.js",["46","47"],"\nimport React, { Fragment, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport '../index.css'\n\nexport default function LoginForm() {\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n\n  // constructor() {\n  //   super()\n\n  //   this.state = {\n  //     email: '',\n  //     password: '',\n  //     username: '',\n  //     action: 'Login' // this will track whether we are logging in or registering\n  //   }\n  // }\n\n// switchForm = () => {\n//   if(this.state.action === \"Login\") {\n//     this.setState({ action: \"Register\" })\n//   } else {\n//     this.setState({ action: \"Login\" })\n//   }\n// }\n\n// handleChange = (event) => {\n//   this.setState({\n//     [event.target.name]: event.target.value\n//   })\n// }\n\n// handleSubmit = (event) => {\n//    event.preventDefault()\n//    console.log(`You are trying to ${this.state.action.toLowerCase()} with the following credentials`)\n//    console.log(this.state);\n//    // Extra challenge: Validate the form!\n//    // Such as...\n//    // Highlight blank fields fields with errors in red\n//    // show the errors under or next to the field\n//    // make sure password is certain length, strength,\n//    // make sure PW includes certain characters (use RegExp)\n//    if(this.state.action === \"Register\") {\n//       this.props.register(this.state)\n//     } else {\n//       this.props.login(this.state)\n//     }\n//  }\n\nconst onDialogOpen = () => {\n  setDialogOpen(true);\n}\n\nconst onDialogClose = () => {\n  setDialogOpen(false)\n}\n\nconst onSnackbarClose = (e, reason) => {\n  if (reason === 'clickaway'){\n    return\n  }\n  setSnackbarOpen (false)\n  setSnackbarMessage('')\n}\n\nconst onCreate = () => {\n  setSnackbarOpen(true)\n  setSnackbarMessage('${username} created')\n  onDialogClose()\n}\n\nconst onChange = e => {\n  setPassword(e.target.value)\n}\n\n  // render() {\n    return (\n      <React.Fragment>\n        <Button color='primary' onClick={onDialogOpen}>\n          Log-In\n        </Button>\n        <Dialog open={dialogOpen} onClose={onDialogClose}>\n          <DialogTitle>Welcome Back, Pilgrim</DialogTitle>\n          <DialogContent>\n            <TextField\n            margin='normal'\n            label='Username'\n            InputProps={{ name: 'username'}}\n            onChange ={e => setUsername(e.target.value)}\n            value={username}\n            fullWidth\n            />\n            <TextField\n            margin='normal'\n            type='password'\n            label='Password'\n            onChange ={onChange}\n            value={password}\n            fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onDialogClose} color='primary'>\n              Cancel\n            </Button>\n            <Button\n            variant='contained'\n            onClick={onCreate}\n            color='primary'\n            >\n              Create\n            </Button>\n          </DialogActions>\n          <Snackbar\n            open={snackbarOpen}\n            message={snackbarMessage}\n            onClose={onSnackbarClose}\n            autoHideDuration={4000}\n            />\n        </Dialog>\n      </React.Fragment>\n    )\n  }\n// }\n\n// render() {\n//   return (\n//     <React.Fragment>\n//       <h2>{this.state.action} here</h2>\n//       <Form onSubmit={this.handleSubmit}>\n//       {\n//        // only show username field if they are registering\n//        // because our login process just uses email\n//        this.state.action === \"Register\"\n//        &&\n//        <React.Fragment>\n//          <Label>Username:</Label>\n//          <Form.Input\n//            type=\"text\"\n//            name=\"username\"\n//            placeholder=\"Enter a username\"\n//            value={this.state.username}\n//            onChange={this.handleChange}\n//          />\n//        </React.Fragment>\n//       }\n//         <Label>Email:</Label>\n//         <Form.Input\n//           type=\"email\"\n//           name=\"email\"\n//           placeholder=\"Enter a email\"\n//           value={this.state.email}\n//           onChange={this.handleChange}\n//         />\n//         <Label>Password:</Label>\n//         <Form.Input\n//           type=\"password\"\n//           name=\"password\"\n//           placeholder=\"Enter a password\"\n//           value={this.state.password}\n//           onChange={this.handleChange}\n//         />\n//         <Button type=\"Submit\">\n//           { this.state.action === \"Login\" ? \"Log in\" : \"Sign up\"}\n//         </Button>\n//       </Form>\n//       {\n//         this.state.action === \"Login\"\n//         ?\n//         <p>\n//           Need an account? Sign up <span className=\"fake-link\" onClick={this.switchForm}>here</span>.\n//         </p>\n//         :\n//         <p>\n//           Already have an account? Log in <span className=\"fake-link\" onClick={this.switchForm}>here</span>.\n//         </p>\n\n//       }\n//     </React.Fragment>\n//   )\n// }",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":81,"column":22,"nodeType":"58","messageId":"59","endLine":81,"endColumn":43},{"ruleId":"60","severity":1,"message":"61","line":6,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":4},{"ruleId":"52","severity":1,"message":"64","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":17},{"ruleId":"52","severity":1,"message":"65","line":30,"column":9,"nodeType":"54","messageId":"55","endLine":30,"endColumn":24},{"ruleId":"52","severity":1,"message":"66","line":34,"column":9,"nodeType":"54","messageId":"55","endLine":34,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":81,"column":22,"nodeType":"58","messageId":"59","endLine":81,"endColumn":43},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CardMedia' is defined but never used.","'ExpandableCards' is assigned a value but never used.","'profiles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]